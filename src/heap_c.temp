//heap.c
//by cloidnerux

#include <system.h>

struct heap
{
    orderdList* memoryHoles;
    u32int* pageDirectory;
};

struct memoryHole
{
    u32int address;
    u32int length;
    u8int used;
};

int SortHoles(void* hole1, void* hole2)
{
    memroyHole *tempHole1, *tempHole2;
    tempHole1 = hole1;
    tempHole2 = hole2;
    if(tempHole1->length < tempHole2->length)
    {
        return -1;
    }
    else if (tempHole1->length == tempHole2->length)
    {
        return 0;
    }
    else if(tempHole1->length > tempHole2->length)
    {
        return 1;
    }
    return 0;
}

heap* InitHeap(u32int* pageDirectory)
{
    struct heap *tempHeap = SimpleMalloc(sizeof(struct heap));
    struct memoryHole *tempHole = SimpleMalloc(sizeof(struct memoryHole));
    u64int memPointer = 0;
    tempHeap->memoryHoles = InitOrderdList(SortHoles);
    tempHeap->pageDirectory = pageDirectory;
    while(*memPointer != 0)
    tempHeap->memoryHoles->InsertElement((void*)memoryHole, tempHeap->memoryHoles);
}
